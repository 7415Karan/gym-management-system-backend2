{
    "sourceFile": "prisma/schema.prisma",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1752122009934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752123974623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,16 @@\n   role     Role\r\n   clubId   String?\r\n   club     Club?    @relation(fields: [clubId], references: [id])\r\n }\r\n+model Club {\r\n+  id       String   @id @default(uuid())\r\n+  name     String\r\n+  location String?\r\n+  users    User[]   // ðŸ‘ˆ back relation\r\n+}\r\n \r\n+\r\n enum Role {\r\n   super_admin\r\n   franchise_admin\r\n   trainer\r\n"
                },
                {
                    "date": 1752127687838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\r\n \r\n generator client {\r\n   provider = \"prisma-client-js\"\r\n-  output   = \"../generated/prisma\"\r\n+  // output   = \"../generated/prisma\"\r\n }\r\n \r\n datasource db {\r\n   provider = \"postgresql\"\r\n"
                },
                {
                    "date": 1752209418079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,73 @@\n   id       String   @id @default(uuid())\r\n   name     String\r\n   location String?\r\n   users    User[]   // ðŸ‘ˆ back relation\r\n+  members Member[]\r\n }\r\n+model Trainer {\r\n+  id       String   @id @default(uuid())\r\n+  name     String\r\n+  email    String   @unique\r\n+  clubId   String\r\n+  club     Club     @relation(fields: [clubId], references: [id])\r\n+}\r\n \r\n \r\n enum Role {\r\n   super_admin\r\n   franchise_admin\r\n   trainer\r\n   staff\r\n }\r\n+\r\n+model Member {\r\n+  id             String   @id @default(uuid())\r\n+  firstName      String\r\n+  lastName       String\r\n+  email          String   @unique\r\n+  phone          String?\r\n+  work           String?\r\n+  dateOfBirth    DateTime?\r\n+  gender         String\r\n+  avatarUrl      String?\r\n+  keyFob         String?\r\n+  tags           String?\r\n+  note           String?\r\n+\r\n+  memberType     String   // 'member' or 'prospect'\r\n+\r\n+  // Address\r\n+  street         String?\r\n+  city           String?\r\n+  state          String?\r\n+  zip            String?\r\n+  addressSearch  String?\r\n+\r\n+  // Marketing\r\n+  salesRep           String?\r\n+  sourcePromotion    String?\r\n+  referredBy         String?\r\n+\r\n+  // Additional\r\n+  trainer            String?\r\n+  joiningDate        DateTime?\r\n+  occupation         String?\r\n+  organization       String?\r\n+  involvementType    String?\r\n+\r\n+  // Emergency Contact\r\n+  emergencyName         String?\r\n+  emergencyRelationship String?\r\n+  emergencyPhone        String?\r\n+  emergencyEmail        String?\r\n+\r\n+  medicalInfo       String?\r\n+\r\n+  clubId    String\r\n+  club      Club     @relation(fields: [clubId], references: [id])\r\n+  trainerId String?  // optional\r\n+  trainer   Trainer? @relation(fields: [trainerId], references: [id])\r\n+\r\n+  createdAt         DateTime @default(now())\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1752209530088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+// This is your Prisma schema file,\r\n+// learn more about it in the docs: https://pris.ly/d/prisma-schema\r\n+\r\n+// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\r\n+// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\r\n+\r\n+generator client {\r\n+  provider = \"prisma-client-js\"\r\n+  // output   = \"../generated/prisma\"\r\n+}\r\n+\r\n+datasource db {\r\n+  provider = \"postgresql\"\r\n+  url      = env(\"DATABASE_URL\")\r\n+}\r\n+model User {\r\n+  id       String   @id @default(cuid())\r\n+  email    String   @unique\r\n+  password String\r\n+  role     Role\r\n+  clubId   String?\r\n+  club     Club?    @relation(fields: [clubId], references: [id])\r\n+}\r\n+model Club {\r\n+  id       String   @id @default(uuid())\r\n+  name     String\r\n+  location String?\r\n+  users    User[]   // ðŸ‘ˆ back relation\r\n+  members Member[]\r\n+}\r\n+model Trainer {\r\n+  id       String   @id @default(uuid())\r\n+  name     String\r\n+  email    String   @unique\r\n+  clubId   String\r\n+  club     Club     @relation(fields: [clubId], references: [id])\r\n+}\r\n+\r\n+\r\n+enum Role {\r\n+  super_admin\r\n+  franchise_admin\r\n+  trainer\r\n+  staff\r\n+}\r\n+\r\n+model Member {\r\n+  id             String   @id @default(uuid())\r\n+  firstName      String\r\n+  lastName       String\r\n+  email          String   @unique\r\n+  phone          String?\r\n+  work           String?\r\n+  dateOfBirth    DateTime?\r\n+  gender         String\r\n+  avatarUrl      String?\r\n+  keyFob         String?\r\n+  tags           String?\r\n+  note           String?\r\n+\r\n+  memberType     String   // 'member' or 'prospect'\r\n+\r\n+  // Address\r\n+  street         String?\r\n+  city           String?\r\n+  state          String?\r\n+  zip            String?\r\n+  addressSearch  String?\r\n+\r\n+  // Marketing\r\n+  salesRep           String?\r\n+  sourcePromotion    String?\r\n+  referredBy         String?\r\n+\r\n+  // Additional\r\n+  \r\n+  joiningDate        DateTime?\r\n+  occupation         String?\r\n+  organization       String?\r\n+  involvementType    String?\r\n+\r\n+  // Emergency Contact\r\n+  emergencyName         String?\r\n+  emergencyRelationship String?\r\n+  emergencyPhone        String?\r\n+  emergencyEmail        String?\r\n+\r\n+  medicalInfo       String?\r\n+\r\n+  clubId    String\r\n+  club      Club     @relation(fields: [clubId], references: [id])\r\n+\r\n+  trainerId String?  // optiona\r\n+  trainer   Trainer? @relation(fields: [trainerId], references: [id])\r\n+\r\n+  createdAt         DateTime @default(now())\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1752209609385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,15 +26,17 @@\n   name     String\r\n   location String?\r\n   users    User[]   // ðŸ‘ˆ back relation\r\n   members Member[]\r\n+  trainers Trainer[]\r\n }\r\n model Trainer {\r\n   id       String   @id @default(uuid())\r\n   name     String\r\n   email    String   @unique\r\n   clubId   String\r\n   club     Club     @relation(fields: [clubId], references: [id])\r\n+  members Member[]\r\n }\r\n \r\n \r\n enum Role {\r\n"
                },
                {
                    "date": 1752295665751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+// This is your Prisma schema file,\r\n+// learn more about it in the docs: https://pris.ly/d/prisma-schema\r\n+\r\n+// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\r\n+// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\r\n+\r\n+generator client {\r\n+  provider = \"prisma-client-js\"\r\n+  // output   = \"../generated/prisma\"\r\n+}\r\n+\r\n+datasource db {\r\n+  provider = \"postgresql\"\r\n+  url      = env(\"DATABASE_URL\")\r\n+}\r\n+model User {\r\n+  id       String   @id @default(cuid())\r\n+  email    String   @unique\r\n+  password String\r\n+  role     Role\r\n+  clubId   String?\r\n+  club     Club?    @relation(fields: [clubId], references: [id])\r\n+}\r\n+model Club {\r\n+  id       String   @id @default(uuid())\r\n+  name     String\r\n+  location String?\r\n+  users    User[]   // ðŸ‘ˆ back relation\r\n+  members Member[]\r\n+  trainers Trainer[]\r\n+}\r\n+model Trainer {\r\n+  id       String   @id @default(uuid())\r\n+  name     String\r\n+  email    String   @unique\r\n+  clubId   String\r\n+  club     Club     @relation(fields: [clubId], references: [id])\r\n+  members Member[]\r\n+}\r\n+\r\n+\r\n+enum Role {\r\n+  super_admin\r\n+  franchise_admin\r\n+  trainer\r\n+  staff\r\n+}\r\n+\r\n+model Member {\r\n+  id             String   @id @default(uuid())\r\n+  firstName      String\r\n+  lastName       String\r\n+  email          String   @unique\r\n+  phone          String?\r\n+  work           String?\r\n+  dateOfBirth    DateTime?\r\n+  gender         String\r\n+  avatarUrl      String?\r\n+  keyFob         String?\r\n+  tags           String?\r\n+  note           String?\r\n+\r\n+  memberType     String   // 'member' or 'prospect'\r\n+\r\n+  // Address\r\n+  street         String?\r\n+  city           String?\r\n+  state          String?\r\n+  zip            String?\r\n+  addressSearch  String?\r\n+\r\n+  // Marketing\r\n+  salesRep           String?\r\n+  sourcePromotion    String?\r\n+  referredBy         String?\r\n+\r\n+  // Additional\r\n+  \r\n+  joiningDate        DateTime?\r\n+  occupation         String?\r\n+  organization       String?\r\n+  involvementType    String?\r\n+\r\n+  // Emergency Contact\r\n+  emergencyName         String?\r\n+  emergencyRelationship String?\r\n+  emergencyPhone        String?\r\n+  emergencyEmail        String?\r\n+\r\n+  medicalInfo       String?\r\n+\r\n+  clubId    String\r\n+  club      Club     @relation(fields: [clubId], references: [id])\r\n+\r\n+  trainerId String?  // optiona\r\n+  trainer   Trainer? @relation(fields: [trainerId], references: [id])\r\n+\r\n+  createdAt         DateTime @default(now())\r\n+\r\n+  membership  Membership?\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1752295796563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,4 +99,15 @@\n \r\n   membership  Membership?\r\n }\r\n \r\n+model Membership {\r\n+  id         String   @id @default(uuid())\r\n+  planName   String\r\n+  startDate  DateTime\r\n+  endDate    DateTime\r\n+  autoRenew  Boolean\r\n+  status     String\r\n+  member     Member   @relation(fields: [memberId], references: [id])\r\n+  memberId   String   @unique\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1752301528552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,202 +109,14 @@\n   status     String\r\n   member     Member   @relation(fields: [memberId], references: [id])\r\n   memberId   String   @unique\r\n }\r\n-\r\n-// This is your Prisma schema file,\r\n-// learn more about it in the docs: https://pris.ly/d/prisma-schema\r\n-\r\n-// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\r\n-// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\r\n-\r\n-generator client {\r\n-  provider = \"prisma-client-js\"\r\n-  // output   = \"../generated/prisma\"\r\n+model MembershipPlan {\r\n+  id         String   @id @default(uuid())\r\n+  name       String   @unique\r\n+  description String?\r\n+  price      Float\r\n+  durationInDays Int\r\n+  createdAt  DateTime @default(now())\r\n }\r\n \r\n-datasource db {\r\n-  provider = \"postgresql\"\r\n-  url      = env(\"DATABASE_URL\")\r\n-}\r\n-model User {\r\n-  id       String   @id @default(cuid())\r\n-  email    String   @unique\r\n-  password String\r\n-  role     Role\r\n-  clubId   String?\r\n-  club     Club?    @relation(fields: [clubId], references: [id])\r\n-}\r\n-model Club {\r\n-  id       String   @id @default(uuid())\r\n-  name     String\r\n-  location String?\r\n-  users    User[]   // ðŸ‘ˆ back relation\r\n-  members Member[]\r\n-  trainers Trainer[]\r\n-}\r\n-model Trainer {\r\n-  id       String   @id @default(uuid())\r\n-  name     String\r\n-  email    String   @unique\r\n-  clubId   String\r\n-  club     Club     @relation(fields: [clubId], references: [id])\r\n-  members Member[]\r\n-}\r\n \r\n-\r\n-enum Role {\r\n-  super_admin\r\n-  franchise_admin\r\n-  trainer\r\n-  staff\r\n-}\r\n-\r\n-model Member {\r\n-  id             String   @id @default(uuid())\r\n-  firstName      String\r\n-  lastName       String\r\n-  email          String   @unique\r\n-  phone          String?\r\n-  work           String?\r\n-  dateOfBirth    DateTime?\r\n-  gender         String\r\n-  avatarUrl      String?\r\n-  keyFob         String?\r\n-  tags           String?\r\n-  note           String?\r\n-\r\n-  memberType     String   // 'member' or 'prospect'\r\n-\r\n-  // Address\r\n-  street         String?\r\n-  city           String?\r\n-  state          String?\r\n-  zip            String?\r\n-  addressSearch  String?\r\n-\r\n-  // Marketing\r\n-  salesRep           String?\r\n-  sourcePromotion    String?\r\n-  referredBy         String?\r\n-\r\n-  // Additional\r\n-  \r\n-  joiningDate        DateTime?\r\n-  occupation         String?\r\n-  organization       String?\r\n-  involvementType    String?\r\n-\r\n-  // Emergency Contact\r\n-  emergencyName         String?\r\n-  emergencyRelationship String?\r\n-  emergencyPhone        String?\r\n-  emergencyEmail        String?\r\n-\r\n-  medicalInfo       String?\r\n-\r\n-  clubId    String\r\n-  club      Club     @relation(fields: [clubId], references: [id])\r\n-\r\n-  trainerId String?  // optiona\r\n-  trainer   Trainer? @relation(fields: [trainerId], references: [id])\r\n-\r\n-  createdAt         DateTime @default(now())\r\n-}\r\n-\r\n-// This is your Prisma schema file,\r\n-// learn more about it in the docs: https://pris.ly/d/prisma-schema\r\n-\r\n-// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\r\n-// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\r\n-\r\n-generator client {\r\n-  provider = \"prisma-client-js\"\r\n-  // output   = \"../generated/prisma\"\r\n-}\r\n-\r\n-datasource db {\r\n-  provider = \"postgresql\"\r\n-  url      = env(\"DATABASE_URL\")\r\n-}\r\n-model User {\r\n-  id       String   @id @default(cuid())\r\n-  email    String   @unique\r\n-  password String\r\n-  role     Role\r\n-  clubId   String?\r\n-  club     Club?    @relation(fields: [clubId], references: [id])\r\n-}\r\n-model Club {\r\n-  id       String   @id @default(uuid())\r\n-  name     String\r\n-  location String?\r\n-  users    User[]   // ðŸ‘ˆ back relation\r\n-  members Member[]\r\n-}\r\n-model Trainer {\r\n-  id       String   @id @default(uuid())\r\n-  name     String\r\n-  email    String   @unique\r\n-  clubId   String\r\n-  club     Club     @relation(fields: [clubId], references: [id])\r\n-}\r\n-\r\n-\r\n-enum Role {\r\n-  super_admin\r\n-  franchise_admin\r\n-  trainer\r\n-  staff\r\n-}\r\n-\r\n-model Member {\r\n-  id             String   @id @default(uuid())\r\n-  firstName      String\r\n-  lastName       String\r\n-  email          String   @unique\r\n-  phone          String?\r\n-  work           String?\r\n-  dateOfBirth    DateTime?\r\n-  gender         String\r\n-  avatarUrl      String?\r\n-  keyFob         String?\r\n-  tags           String?\r\n-  note           String?\r\n-\r\n-  memberType     String   // 'member' or 'prospect'\r\n-\r\n-  // Address\r\n-  street         String?\r\n-  city           String?\r\n-  state          String?\r\n-  zip            String?\r\n-  addressSearch  String?\r\n-\r\n-  // Marketing\r\n-  salesRep           String?\r\n-  sourcePromotion    String?\r\n-  referredBy         String?\r\n-\r\n-  // Additional\r\n-  trainer            String?\r\n-  joiningDate        DateTime?\r\n-  occupation         String?\r\n-  organization       String?\r\n-  involvementType    String?\r\n-\r\n-  // Emergency Contact\r\n-  emergencyName         String?\r\n-  emergencyRelationship String?\r\n-  emergencyPhone        String?\r\n-  emergencyEmail        String?\r\n-\r\n-  medicalInfo       String?\r\n-\r\n-  clubId    String\r\n-  club      Club     @relation(fields: [clubId], references: [id])\r\n-  trainerId String?  // optional\r\n-  trainer   Trainer? @relation(fields: [trainerId], references: [id])\r\n-\r\n-  createdAt         DateTime @default(now())\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1752358329384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,5 +118,16 @@\n   durationInDays Int\r\n   createdAt  DateTime @default(now())\r\n }\r\n \r\n+model PaymentMethod {\r\n+  id        String   @id @default(uuid())\r\n+  cardBrand String\r\n+  last4     String\r\n+  expMonth  Int\r\n+  expYear   Int\r\n+  member    Member   @relation(fields: [memberId], references: [id])\r\n+  memberId  String   @unique\r\n+}\r\n \r\n+\r\n+\r\n"
                },
                {
                    "date": 1752358460176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,136 @@\n+// This is your Prisma schema file,\r\n+// learn more about it in the docs: https://pris.ly/d/prisma-schema\r\n+\r\n+// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\r\n+// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\r\n+\r\n+generator client {\r\n+  provider = \"prisma-client-js\"\r\n+  // output   = \"../generated/prisma\"\r\n+}\r\n+\r\n+datasource db {\r\n+  provider = \"postgresql\"\r\n+  url      = env(\"DATABASE_URL\")\r\n+}\r\n+model User {\r\n+  id       String   @id @default(cuid())\r\n+  email    String   @unique\r\n+  password String\r\n+  role     Role\r\n+  clubId   String?\r\n+  club     Club?    @relation(fields: [clubId], references: [id])\r\n+}\r\n+model Club {\r\n+  id       String   @id @default(uuid())\r\n+  name     String\r\n+  location String?\r\n+  users    User[]   // ðŸ‘ˆ back relation\r\n+  members Member[]\r\n+  trainers Trainer[]\r\n+}\r\n+model Trainer {\r\n+  id       String   @id @default(uuid())\r\n+  name     String\r\n+  email    String   @unique\r\n+  clubId   String\r\n+  club     Club     @relation(fields: [clubId], references: [id])\r\n+  members Member[]\r\n+}\r\n+\r\n+\r\n+enum Role {\r\n+  super_admin\r\n+  franchise_admin\r\n+  trainer\r\n+  staff\r\n+}\r\n+\r\n+model Member {\r\n+  id             String   @id @default(uuid())\r\n+  firstName      String\r\n+  lastName       String\r\n+  email          String   @unique\r\n+  phone          String?\r\n+  work           String?\r\n+  dateOfBirth    DateTime?\r\n+  gender         String\r\n+  avatarUrl      String?\r\n+  keyFob         String?\r\n+  tags           String?\r\n+  note           String?\r\n+\r\n+  memberType     String   // 'member' or 'prospect'\r\n+\r\n+  // Address\r\n+  street         String?\r\n+  city           String?\r\n+  state          String?\r\n+  zip            String?\r\n+  addressSearch  String?\r\n+\r\n+  // Marketing\r\n+  salesRep           String?\r\n+  sourcePromotion    String?\r\n+  referredBy         String?\r\n+\r\n+  // Additional\r\n+  \r\n+  joiningDate        DateTime?\r\n+  occupation         String?\r\n+  organization       String?\r\n+  involvementType    String?\r\n+\r\n+  // Emergency Contact\r\n+  emergencyName         String?\r\n+  emergencyRelationship String?\r\n+  emergencyPhone        String?\r\n+  emergencyEmail        String?\r\n+\r\n+  medicalInfo       String?\r\n+\r\n+  clubId    String\r\n+  club      Club     @relation(fields: [clubId], references: [id])\r\n+\r\n+  trainerId String?  // optiona\r\n+  trainer   Trainer? @relation(fields: [trainerId], references: [id])\r\n+\r\n+  createdAt         DateTime @default(now())\r\n+\r\n+  membership  Membership?\r\n+\r\n+  paymentMethod PaymentMethod?\r\n+\r\n+}\r\n+\r\n+model Membership {\r\n+  id         String   @id @default(uuid())\r\n+  planName   String\r\n+  startDate  DateTime\r\n+  endDate    DateTime\r\n+  autoRenew  Boolean\r\n+  status     String\r\n+  member     Member   @relation(fields: [memberId], references: [id])\r\n+  memberId   String   @unique\r\n+}\r\n+model MembershipPlan {\r\n+  id         String   @id @default(uuid())\r\n+  name       String   @unique\r\n+  description String?\r\n+  price      Float\r\n+  durationInDays Int\r\n+  createdAt  DateTime @default(now())\r\n+}\r\n+\r\n+model PaymentMethod {\r\n+  id        String   @id @default(uuid())\r\n+  cardBrand String\r\n+  last4     String\r\n+  expMonth  Int\r\n+  expYear   Int\r\n+  member    Member   @relation(fields: [memberId], references: [id])\r\n+  memberId  String   @unique\r\n+}\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1752359173506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,136 @@\n+// This is your Prisma schema file,\n+// learn more about it in the docs: https://pris.ly/d/prisma-schema\n+\n+// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n+// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n+\n+generator client {\n+  provider = \"prisma-client-js\"\n+  // output   = \"../generated/prisma\"\n+}\n+\n+datasource db {\n+  provider = \"postgresql\"\n+  url      = env(\"DATABASE_URL\")\n+}\n+\n+model User {\n+  id       String  @id @default(cuid())\n+  email    String  @unique\n+  password String\n+  role     Role\n+  clubId   String?\n+  club     Club?   @relation(fields: [clubId], references: [id])\n+}\n+\n+model Club {\n+  id       String    @id @default(uuid())\n+  name     String\n+  location String?\n+  users    User[] // ðŸ‘ˆ back relation\n+  members  Member[]\n+  trainers Trainer[]\n+}\n+\n+model Trainer {\n+  id      String   @id @default(uuid())\n+  name    String\n+  email   String   @unique\n+  clubId  String\n+  club    Club     @relation(fields: [clubId], references: [id])\n+  members Member[]\n+}\n+\n+enum Role {\n+  super_admin\n+  franchise_admin\n+  trainer\n+  staff\n+}\n+\n+model Member {\n+  id          String    @id @default(uuid())\n+  firstName   String\n+  lastName    String\n+  email       String    @unique\n+  phone       String?\n+  work        String?\n+  dateOfBirth DateTime?\n+  gender      String\n+  avatarUrl   String?\n+  keyFob      String?\n+  tags        String?\n+  note        String?\n+\n+  memberType String // 'member' or 'prospect'\n+\n+  // Address\n+  street        String?\n+  city          String?\n+  state         String?\n+  zip           String?\n+  addressSearch String?\n+\n+  // Marketing\n+  salesRep        String?\n+  sourcePromotion String?\n+  referredBy      String?\n+\n+  // Additional\n+\n+  joiningDate     DateTime?\n+  occupation      String?\n+  organization    String?\n+  involvementType String?\n+\n+  // Emergency Contact\n+  emergencyName         String?\n+  emergencyRelationship String?\n+  emergencyPhone        String?\n+  emergencyEmail        String?\n+\n+  medicalInfo String?\n+\n+  clubId String\n+  club   Club   @relation(fields: [clubId], references: [id])\n+\n+  trainerId String? // optiona\n+  trainer   Trainer? @relation(fields: [trainerId], references: [id])\n+\n+  createdAt DateTime @default(now())\n+\n+  membership Membership?\n+\n+  paymentMethod PaymentMethod?\n+}\n+\n+model Membership {\n+  id        String   @id @default(uuid())\n+  planName  String\n+  startDate DateTime\n+  endDate   DateTime\n+  autoRenew Boolean\n+  status    String\n+  member    Member   @relation(fields: [memberId], references: [id])\n+  memberId  String   @unique\n+}\n+\n+model MembershipPlan {\n+  id             String   @id @default(uuid())\n+  name           String   @unique\n+  description    String?\n+  price          Float\n+  durationInDays Int\n+  createdAt      DateTime @default(now())\n+}\n+\n+model PaymentMethod {\n+  id        String @id @default(uuid())\n+  stripePaymentMethodId String\n+  cardBrand String\n+  last4     String\n+  expMonth  Int\n+  expYear   Int\n+  member    Member @relation(fields: [memberId], references: [id])\n+  memberId  String @unique\n+}\n"
                },
                {
                    "date": 1752372235906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,273 +133,16 @@\n   expYear   Int\n   member    Member @relation(fields: [memberId], references: [id])\n   memberId  String @unique\n }\n-// This is your Prisma schema file,\r\n-// learn more about it in the docs: https://pris.ly/d/prisma-schema\r\n-\r\n-// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\r\n-// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\r\n-\r\n-generator client {\r\n-  provider = \"prisma-client-js\"\r\n-  // output   = \"../generated/prisma\"\r\n-}\r\n-\r\n-datasource db {\r\n-  provider = \"postgresql\"\r\n-  url      = env(\"DATABASE_URL\")\r\n-}\r\n-model User {\r\n-  id       String   @id @default(cuid())\r\n-  email    String   @unique\r\n-  password String\r\n-  role     Role\r\n-  clubId   String?\r\n-  club     Club?    @relation(fields: [clubId], references: [id])\r\n-}\r\n-model Club {\r\n-  id       String   @id @default(uuid())\r\n-  name     String\r\n-  location String?\r\n-  users    User[]   // ðŸ‘ˆ back relation\r\n-  members Member[]\r\n-  trainers Trainer[]\r\n-}\r\n-model Trainer {\r\n-  id       String   @id @default(uuid())\r\n-  name     String\r\n-  email    String   @unique\r\n-  clubId   String\r\n-  club     Club     @relation(fields: [clubId], references: [id])\r\n-  members Member[]\r\n-}\r\n-\r\n-\r\n-enum Role {\r\n-  super_admin\r\n-  franchise_admin\r\n-  trainer\r\n-  staff\r\n-}\r\n-\r\n-model Member {\r\n-  id             String   @id @default(uuid())\r\n-  firstName      String\r\n-  lastName       String\r\n-  email          String   @unique\r\n-  phone          String?\r\n-  work           String?\r\n-  dateOfBirth    DateTime?\r\n-  gender         String\r\n-  avatarUrl      String?\r\n-  keyFob         String?\r\n-  tags           String?\r\n-  note           String?\r\n-\r\n-  memberType     String   // 'member' or 'prospect'\r\n-\r\n-  // Address\r\n-  street         String?\r\n-  city           String?\r\n-  state          String?\r\n-  zip            String?\r\n-  addressSearch  String?\r\n-\r\n-  // Marketing\r\n-  salesRep           String?\r\n-  sourcePromotion    String?\r\n-  referredBy         String?\r\n-\r\n-  // Additional\r\n-  \r\n-  joiningDate        DateTime?\r\n-  occupation         String?\r\n-  organization       String?\r\n-  involvementType    String?\r\n-\r\n-  // Emergency Contact\r\n-  emergencyName         String?\r\n-  emergencyRelationship String?\r\n-  emergencyPhone        String?\r\n-  emergencyEmail        String?\r\n-\r\n-  medicalInfo       String?\r\n-\r\n-  clubId    String\r\n-  club      Club     @relation(fields: [clubId], references: [id])\r\n-\r\n-  trainerId String?  // optiona\r\n-  trainer   Trainer? @relation(fields: [trainerId], references: [id])\r\n-\r\n-  createdAt         DateTime @default(now())\r\n-\r\n-  membership  Membership?\r\n-\r\n-  paymentMethod PaymentMethod?\r\n-\r\n-}\r\n-\r\n-model Membership {\r\n-  id         String   @id @default(uuid())\r\n-  planName   String\r\n-  startDate  DateTime\r\n-  endDate    DateTime\r\n-  autoRenew  Boolean\r\n-  status     String\r\n-  member     Member   @relation(fields: [memberId], references: [id])\r\n-  memberId   String   @unique\r\n-}\r\n-model MembershipPlan {\r\n-  id         String   @id @default(uuid())\r\n-  name       String   @unique\r\n-  description String?\r\n-  price      Float\r\n-  durationInDays Int\r\n-  createdAt  DateTime @default(now())\r\n-}\r\n-\r\n-model PaymentMethod {\r\n-  id        String   @id @default(uuid())\r\n-  cardBrand String\r\n-  last4     String\r\n-  expMonth  Int\r\n-  expYear   Int\r\n-  member    Member   @relation(fields: [memberId], references: [id])\r\n-  memberId  String   @unique\r\n-}\r\n-\r\n-\r\n-\r\n-// This is your Prisma schema file,\r\n-// learn more about it in the docs: https://pris.ly/d/prisma-schema\r\n-\r\n-// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\r\n-// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\r\n-\r\n-generator client {\r\n-  provider = \"prisma-client-js\"\r\n-  // output   = \"../generated/prisma\"\r\n-}\r\n-\r\n-datasource db {\r\n-  provider = \"postgresql\"\r\n-  url      = env(\"DATABASE_URL\")\r\n-}\r\n-model User {\r\n-  id       String   @id @default(cuid())\r\n-  email    String   @unique\r\n-  password String\r\n-  role     Role\r\n-  clubId   String?\r\n-  club     Club?    @relation(fields: [clubId], references: [id])\r\n-}\r\n-model Club {\r\n-  id       String   @id @default(uuid())\r\n-  name     String\r\n-  location String?\r\n-  users    User[]   // ðŸ‘ˆ back relation\r\n-  members Member[]\r\n-  trainers Trainer[]\r\n-}\r\n-model Trainer {\r\n-  id       String   @id @default(uuid())\r\n-  name     String\r\n-  email    String   @unique\r\n-  clubId   String\r\n-  club     Club     @relation(fields: [clubId], references: [id])\r\n-  members Member[]\r\n-}\r\n-\r\n-\r\n-enum Role {\r\n-  super_admin\r\n-  franchise_admin\r\n-  trainer\r\n-  staff\r\n-}\r\n-\r\n-model Member {\r\n-  id             String   @id @default(uuid())\r\n-  firstName      String\r\n-  lastName       String\r\n-  email          String   @unique\r\n-  phone          String?\r\n-  work           String?\r\n-  dateOfBirth    DateTime?\r\n-  gender         String\r\n-  avatarUrl      String?\r\n-  keyFob         String?\r\n-  tags           String?\r\n-  note           String?\r\n-\r\n-  memberType     String   // 'member' or 'prospect'\r\n-\r\n-  // Address\r\n-  street         String?\r\n-  city           String?\r\n-  state          String?\r\n-  zip            String?\r\n-  addressSearch  String?\r\n-\r\n-  // Marketing\r\n-  salesRep           String?\r\n-  sourcePromotion    String?\r\n-  referredBy         String?\r\n-\r\n-  // Additional\r\n-  \r\n-  joiningDate        DateTime?\r\n-  occupation         String?\r\n-  organization       String?\r\n-  involvementType    String?\r\n-\r\n-  // Emergency Contact\r\n-  emergencyName         String?\r\n-  emergencyRelationship String?\r\n-  emergencyPhone        String?\r\n-  emergencyEmail        String?\r\n-\r\n-  medicalInfo       String?\r\n-\r\n-  clubId    String\r\n-  club      Club     @relation(fields: [clubId], references: [id])\r\n-\r\n-  trainerId String?  // optiona\r\n-  trainer   Trainer? @relation(fields: [trainerId], references: [id])\r\n-\r\n-  createdAt         DateTime @default(now())\r\n-\r\n-  membership  Membership?\r\n-}\r\n-\r\n-model Membership {\r\n-  id         String   @id @default(uuid())\r\n-  planName   String\r\n-  startDate  DateTime\r\n-  endDate    DateTime\r\n-  autoRenew  Boolean\r\n-  status     String\r\n-  member     Member   @relation(fields: [memberId], references: [id])\r\n-  memberId   String   @unique\r\n-}\r\n-model MembershipPlan {\r\n-  id         String   @id @default(uuid())\r\n-  name       String   @unique\r\n-  description String?\r\n-  price      Float\r\n-  durationInDays Int\r\n-  createdAt  DateTime @default(now())\r\n-}\r\n-\r\n-model PaymentMethod {\r\n-  id        String   @id @default(uuid())\r\n-  cardBrand String\r\n-  last4     String\r\n-  expMonth  Int\r\n-  expYear   Int\r\n-  member    Member   @relation(fields: [memberId], references: [id])\r\n-  memberId  String   @unique\r\n-}\r\n-\r\n-\r\n-\r\n+\n+model Invoice {\n+  id            String   @id @default(uuid())\n+  member        Member   @relation(fields: [memberId], references: [id])\n+  memberId      String\n+  planName      String\n+  amount        Float\n+  status        String   // 'paid', 'unpaid', 'failed'\n+  issuedAt      DateTime @default(now())\n+  dueDate       DateTime\n+}\n+\n"
                },
                {
                    "date": 1752372297002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,8 +101,10 @@\n \n   membership Membership?\n \n   paymentMethod PaymentMethod?\n+\n+  invoice Invoice?\n }\n \n model Membership {\n   id        String   @id @default(uuid())\n"
                },
                {
                    "date": 1752372373475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n \n model Invoice {\n   id            String   @id @default(uuid())\n   member        Member   @relation(fields: [memberId], references: [id])\n-  memberId      String\n+  memberId      String   @unique\n   planName      String\n   amount        Float\n   status        String   // 'paid', 'unpaid', 'failed'\n   issuedAt      DateTime @default(now())\n"
                },
                {
                    "date": 1752373125266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n   membership Membership?\n \n   paymentMethod PaymentMethod?\n \n-  invoice Invoice?\n+  invoice Invoice[]\n }\n \n model Membership {\n   id        String   @id @default(uuid())\n"
                },
                {
                    "date": 1752375256739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,25 +126,24 @@\n   createdAt      DateTime @default(now())\n }\n \n model PaymentMethod {\n-  id        String @id @default(uuid())\n+  id                    String @id @default(uuid())\n   stripePaymentMethodId String\n-  cardBrand String\n-  last4     String\n-  expMonth  Int\n-  expYear   Int\n-  member    Member @relation(fields: [memberId], references: [id])\n-  memberId  String @unique\n+  cardBrand             String\n+  last4                 String\n+  expMonth              Int\n+  expYear               Int\n+  member                Member @relation(fields: [memberId], references: [id])\n+  memberId              String @unique\n }\n \n model Invoice {\n-  id            String   @id @default(uuid())\n-  member        Member   @relation(fields: [memberId], references: [id])\n-  memberId      String   @unique\n-  planName      String\n-  amount        Float\n-  status        String   // 'paid', 'unpaid', 'failed'\n-  issuedAt      DateTime @default(now())\n-  dueDate       DateTime\n+  id       String   @id @default(uuid())\n+  member   Member   @relation(fields: [memberId], references: [id])\n+  memberId String   \n+  planName String\n+  amount   Float\n+  status   String // 'paid', 'unpaid', 'failed'\n+  issuedAt DateTime @default(now())\n+  dueDate  DateTime\n }\n-\n"
                },
                {
                    "date": 1752393243847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,13 +83,11 @@\n   organization    String?\n   involvementType String?\n \n   // Emergency Contact\n-  emergencyName         String?\n-  emergencyRelationship String?\n-  emergencyPhone        String?\n-  emergencyEmail        String?\n+  emergency       Json?\n \n+\n   medicalInfo String?\n \n   clubId String\n   club   Club   @relation(fields: [clubId], references: [id])\n"
                },
                {
                    "date": 1752393329004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,12 @@\n   involvementType String?\n \n   // Emergency Contact\n   emergency       Json?\n+  emergencyName         String?\n+emergencyRelationship String?\n+emergencyPhone        String?\n+emergencyEmail        String?\n \n \n   medicalInfo String?\n \n"
                },
                {
                    "date": 1752393405396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,12 +84,9 @@\n   involvementType String?\n \n   // Emergency Contact\n   emergency       Json?\n-  emergencyName         String?\n-emergencyRelationship String?\n-emergencyPhone        String?\n-emergencyEmail        String?\n+ \n \n \n   medicalInfo String?\n \n"
                },
                {
                    "date": 1752395032940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,16 @@\n   // Emergency Contact\n   emergency       Json?\n  \n \n-\n+  //medical information\n   medicalInfo String?\n+  allergies           String?\n+  medications         String?\n+  chronicConditions   String?\n+  injuries            String?\n+  doctorContact       String?\n+  lastExamDate        DateTime?\n \n   clubId String\n   club   Club   @relation(fields: [clubId], references: [id])\n \n"
                },
                {
                    "date": 1752405247591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,4 +151,28 @@\n   status   String // 'paid', 'unpaid', 'failed'\n   issuedAt DateTime @default(now())\n   dueDate  DateTime\n }\n+\n+model ClassSchedule {\n+  id          String   @id @default(uuid())\n+  title       String\n+  date        DateTime\n+  duration    Int       // in minutes\n+  location    String?\n+  trainerId   String\n+  trainer     Trainer   @relation(fields: [trainerId], references: [id])\n+  maxCapacity Int\n+\n+  bookings    Booking[]\n+  createdAt   DateTime  @default(now())\n+}\n+\n+model Booking {\n+  id        String   @id @default(uuid())\n+  memberId  String\n+  schedule  ClassSchedule @relation(fields: [scheduleId], references: [id])\n+  scheduleId String\n+  status    String   // 'confirmed' | 'canceled' | 'waitlisted'\n+  attended  Boolean  @default(false)\n+  createdAt DateTime @default(now())\n+}\n"
                },
                {
                    "date": 1752405726659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+// This is your Prisma schema file,\n+// learn more about it in the docs: https://pris.ly/d/prisma-schema\n+\n+// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n+// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n+\n+generator client {\n+  provider = \"prisma-client-js\"\n+  // output   = \"../generated/prisma\"\n+}\n+\n+datasource db {\n+  provider = \"postgresql\"\n+  url      = env(\"DATABASE_URL\")\n+}\n+\n+model User {\n+  id       String  @id @default(cuid())\n+  email    String  @unique\n+  password String\n+  role     Role\n+  clubId   String?\n+  club     Club?   @relation(fields: [clubId], references: [id])\n+}\n+\n+model Club {\n+  id       String    @id @default(uuid())\n+  name     String\n+  location String?\n+  users    User[] // ðŸ‘ˆ back relation\n+  members  Member[]\n+  trainers Trainer[]\n+\n+\n+}\n+\n+model Trainer {\n+  id      String   @id @default(uuid())\n+  name    String\n+  email   String   @unique\n+  clubId  String\n+  club    Club     @relation(fields: [clubId], references: [id])\n+  members Member[]\n+\n+  schedules ClassSchedule[]\n+}\n+\n+enum Role {\n+  super_admin\n+  franchise_admin\n+  trainer\n+  staff\n+}\n+\n+model Member {\n+  id          String    @id @default(uuid())\n+  firstName   String\n+  lastName    String\n+  email       String    @unique\n+  phone       String?\n+  work        String?\n+  dateOfBirth DateTime?\n+  gender      String\n+  avatarUrl   String?\n+  keyFob      String?\n+  tags        String?\n+  note        String?\n+\n+  memberType String // 'member' or 'prospect'\n+\n+  // Address\n+  street        String?\n+  city          String?\n+  state         String?\n+  zip           String?\n+  addressSearch String?\n+\n+  // Marketing\n+  salesRep        String?\n+  sourcePromotion String?\n+  referredBy      String?\n+\n+  // Additional\n+\n+  joiningDate     DateTime?\n+  occupation      String?\n+  organization    String?\n+  involvementType String?\n+\n+  // Emergency Contact\n+  emergency       Json?\n+ \n+\n+  //medical information\n+  medicalInfo String?\n+  allergies           String?\n+  medications         String?\n+  chronicConditions   String?\n+  injuries            String?\n+  doctorContact       String?\n+  lastExamDate        DateTime?\n+\n+  clubId String\n+  club   Club   @relation(fields: [clubId], references: [id])\n+\n+  trainerId String? // optiona\n+  trainer   Trainer? @relation(fields: [trainerId], references: [id])\n+\n+  createdAt DateTime @default(now())\n+\n+  membership Membership?\n+\n+  paymentMethod PaymentMethod?\n+\n+  invoice Invoice[]\n+}\n+\n+model Membership {\n+  id        String   @id @default(uuid())\n+  planName  String\n+  startDate DateTime\n+  endDate   DateTime\n+  autoRenew Boolean\n+  status    String\n+  member    Member   @relation(fields: [memberId], references: [id])\n+  memberId  String   @unique\n+}\n+\n+model MembershipPlan {\n+  id             String   @id @default(uuid())\n+  name           String   @unique\n+  description    String?\n+  price          Float\n+  durationInDays Int\n+  createdAt      DateTime @default(now())\n+}\n+\n+model PaymentMethod {\n+  id                    String @id @default(uuid())\n+  stripePaymentMethodId String\n+  cardBrand             String\n+  last4                 String\n+  expMonth              Int\n+  expYear               Int\n+  member                Member @relation(fields: [memberId], references: [id])\n+  memberId              String @unique\n+}\n+\n+model Invoice {\n+  id       String   @id @default(uuid())\n+  member   Member   @relation(fields: [memberId], references: [id])\n+  memberId String   \n+  planName String\n+  amount   Float\n+  status   String // 'paid', 'unpaid', 'failed'\n+  issuedAt DateTime @default(now())\n+  dueDate  DateTime\n+}\n+\n+model ClassSchedule {\n+  id          String   @id @default(uuid())\n+  title       String\n+  date        DateTime\n+  duration    Int       // in minutes\n+  location    String?\n+  trainerId   String\n+  trainer     Trainer   @relation(fields: [trainerId], references: [id])\n+  maxCapacity Int\n+\n+  bookings    Booking[]\n+  createdAt   DateTime  @default(now())\n+\n+  clubId        String\n+  club          Club     @relation(fields: [clubId], references: [id])\n+}\n+\n+model Booking {\n+  id        String   @id @default(uuid())\n+  memberId  String\n+  schedule  ClassSchedule @relation(fields: [scheduleId], references: [id])\n+  scheduleId String\n+  status    String   // 'confirmed' | 'canceled' | 'waitlisted'\n+  attended  Boolean  @default(false)\n+  createdAt DateTime @default(now())\n+}\n"
                },
                {
                    "date": 1752405845674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,11 @@\n   users    User[] // ðŸ‘ˆ back relation\n   members  Member[]\n   trainers Trainer[]\n \n+  schedules ClassSchedule[]\n \n+\n }\n \n model Trainer {\n   id      String   @id @default(uuid())\n"
                },
                {
                    "date": 1752441436584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,10 @@\n   members  Member[]\n   trainers Trainer[]\n \n   schedules ClassSchedule[]\n+\n+\n }\n \n model Trainer {\n   id      String   @id @default(uuid())\n@@ -87,18 +89,19 @@\n   organization    String?\n   involvementType String?\n \n   // Emergency Contact\n-  emergency Json?\n+  emergency       Json?\n+ \n \n   //medical information\n-  medicalInfo       String?\n-  allergies         String?\n-  medications       String?\n-  chronicConditions String?\n-  injuries          String?\n-  doctorContact     String?\n-  lastExamDate      DateTime?\n+  medicalInfo String?\n+  allergies           String?\n+  medications         String?\n+  chronicConditions   String?\n+  injuries            String?\n+  doctorContact       String?\n+  lastExamDate        DateTime?\n \n   clubId String\n   club   Club   @relation(fields: [clubId], references: [id])\n \n@@ -147,9 +150,9 @@\n \n model Invoice {\n   id       String   @id @default(uuid())\n   member   Member   @relation(fields: [memberId], references: [id])\n-  memberId String\n+  memberId String   \n   planName String\n   amount   Float\n   status   String // 'paid', 'unpaid', 'failed'\n   issuedAt DateTime @default(now())\n@@ -159,26 +162,36 @@\n model ClassSchedule {\n   id          String   @id @default(uuid())\n   title       String\n   date        DateTime\n-  duration    Int // in minutes\n+  duration    Int       // in minutes\n   location    String?\n   trainerId   String\n-  trainer     Trainer  @relation(fields: [trainerId], references: [id])\n+  trainer     Trainer   @relation(fields: [trainerId], references: [id])\n   maxCapacity Int\n \n-  bookings  Booking[]\n-  createdAt DateTime  @default(now())\n+  bookings    Booking[]\n+  createdAt   DateTime  @default(now())\n \n-  clubId String\n-  club   Club   @relation(fields: [clubId], references: [id])\n+  clubId        String\n+  club          Club     @relation(fields: [clubId], references: [id])\n }\n \n model Booking {\n-  id         String        @id @default(uuid())\n-  memberId   String\n-  schedule   ClassSchedule @relation(fields: [scheduleId], references: [id])\n+  id        String   @id @default(uuid())\n+  memberId  String\n+  schedule  ClassSchedule @relation(fields: [scheduleId], references: [id])\n   scheduleId String\n-  status     String // 'confirmed' | 'canceled' | 'waitlisted'\n-  attended   Boolean       @default(false)\n-  createdAt  DateTime      @default(now())\n+  status    String   // 'confirmed' | 'canceled' | 'waitlisted'\n+  attended  Boolean  @default(false)\n+  createdAt DateTime @default(now())\n }\n+\n+model Location {\n+  id        String   @id @default(cuid())\n+  name      String\n+  clubId    String\n+  club      Club     @relation(fields: [clubId], references: [id])\n+  createdAt DateTime @default(now())\n+  updatedAt DateTime @updatedAt\n+}\n+\n"
                },
                {
                    "date": 1752441480092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,10 @@\n   members  Member[]\n   trainers Trainer[]\n \n   schedules ClassSchedule[]\n+\n+\n }\n \n model Trainer {\n   id      String   @id @default(uuid())\n@@ -87,18 +89,19 @@\n   organization    String?\n   involvementType String?\n \n   // Emergency Contact\n-  emergency Json?\n+  emergency       Json?\n+ \n \n   //medical information\n-  medicalInfo       String?\n-  allergies         String?\n-  medications       String?\n-  chronicConditions String?\n-  injuries          String?\n-  doctorContact     String?\n-  lastExamDate      DateTime?\n+  medicalInfo String?\n+  allergies           String?\n+  medications         String?\n+  chronicConditions   String?\n+  injuries            String?\n+  doctorContact       String?\n+  lastExamDate        DateTime?\n \n   clubId String\n   club   Club   @relation(fields: [clubId], references: [id])\n \n@@ -147,9 +150,9 @@\n \n model Invoice {\n   id       String   @id @default(uuid())\n   member   Member   @relation(fields: [memberId], references: [id])\n-  memberId String\n+  memberId String   \n   planName String\n   amount   Float\n   status   String // 'paid', 'unpaid', 'failed'\n   issuedAt DateTime @default(now())\n@@ -159,26 +162,36 @@\n model ClassSchedule {\n   id          String   @id @default(uuid())\n   title       String\n   date        DateTime\n-  duration    Int // in minutes\n+  duration    Int       // in minutes\n   location    String?\n   trainerId   String\n-  trainer     Trainer  @relation(fields: [trainerId], references: [id])\n+  trainer     Trainer   @relation(fields: [trainerId], references: [id])\n   maxCapacity Int\n \n-  bookings  Booking[]\n-  createdAt DateTime  @default(now())\n+  bookings    Booking[]\n+  createdAt   DateTime  @default(now())\n \n-  clubId String\n-  club   Club   @relation(fields: [clubId], references: [id])\n+  clubId        String\n+  club          Club     @relation(fields: [clubId], references: [id])\n }\n \n model Booking {\n-  id         String        @id @default(uuid())\n-  memberId   String\n-  schedule   ClassSchedule @relation(fields: [scheduleId], references: [id])\n+  id        String   @id @default(uuid())\n+  memberId  String\n+  schedule  ClassSchedule @relation(fields: [scheduleId], references: [id])\n   scheduleId String\n-  status     String // 'confirmed' | 'canceled' | 'waitlisted'\n-  attended   Boolean       @default(false)\n-  createdAt  DateTime      @default(now())\n+  status    String   // 'confirmed' | 'canceled' | 'waitlisted'\n+  attended  Boolean  @default(false)\n+  createdAt DateTime @default(now())\n }\n+\n+model Location {\n+  id        String   @id @default(cuid())\n+  name      String\n+  clubId    String\n+  club      Club     @relation(fields: [clubId], references: [id])\n+  createdAt DateTime @default(now())\n+  updatedAt DateTime @updatedAt\n+}\n+\n"
                }
            ],
            "date": 1752122009934,
            "name": "Commit-0",
            "content": "// This is your Prisma schema file,\r\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\r\n\r\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\r\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\r\n\r\ngenerator client {\r\n  provider = \"prisma-client-js\"\r\n  output   = \"../generated/prisma\"\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\nmodel User {\r\n  id       String   @id @default(cuid())\r\n  email    String   @unique\r\n  password String\r\n  role     Role\r\n  clubId   String?\r\n  club     Club?    @relation(fields: [clubId], references: [id])\r\n}\r\n\r\nenum Role {\r\n  super_admin\r\n  franchise_admin\r\n  trainer\r\n  staff\r\n}\r\n"
        }
    ]
}