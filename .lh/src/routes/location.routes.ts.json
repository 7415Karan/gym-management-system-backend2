{
    "sourceFile": "src/routes/location.routes.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1752441694714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752451293835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,5 +19,7 @@\n     res.status(500).json({ error: 'Failed to fetch locations' });\r\n   }\r\n });\r\n \r\n+router.get('/by-franchise/:franchiseId', getClassesByFranchise);\r\n+\r\n export default router;\r\n"
                },
                {
                    "date": 1752482121024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+//src/routes/location.routes.ts\r\n import express from 'express';\r\n import { PrismaClient } from '@prisma/client';\r\n \r\n const router = express.Router();\r\n"
                },
                {
                    "date": 1752482362763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,6 @@\n-//src/routes/location.routes.ts\r\n import express from 'express';\r\n-import { PrismaClient } from '@prisma/client';\r\n+import { getClassesByFranchise } from '../controllers/class.controller'; // ✅\r\n \r\n const router = express.Router();\r\n-const prisma = new PrismaClient();\r\n \r\n-router.get('/', async (req, res) => {\r\n-  const { clubId } = req.query;\r\n-  if (!clubId) return res.status(400).json({ error: 'clubId required' });\r\n-\r\n-  try {\r\n-    const locations = await prisma.location.findMany({\r\n-      where: { clubId: String(clubId) },\r\n-      orderBy: { name: 'asc' },\r\n-    });\r\n-    res.json(locations);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ error: 'Failed to fetch locations' });\r\n-  }\r\n-});\r\n-\r\n-router.get('/by-franchise/:franchiseId', getClassesByFranchise);\r\n-\r\n-export default router;\r\n+router.get('/by-franchise/:franchiseId', getClassesByFranchise); // ✅ still okay here\r\n"
                },
                {
                    "date": 1752482451744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,4 +3,7 @@\n \r\n const router = express.Router();\r\n \r\n router.get('/by-franchise/:franchiseId', getClassesByFranchise); // ✅ still okay here\r\n+\r\n+\r\n+export default router;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752486335137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+//src/routes/location.routes.ts\r\n import express from 'express';\r\n import { getClassesByFranchise } from '../controllers/class.controller'; // ✅\r\n \r\n const router = express.Router();\r\n"
                },
                {
                    "date": 1752486764825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,22 @@\n+// src/routes/location.routes.ts\r\n+\r\n+import express from 'express';\r\n+import { PrismaClient } from '@prisma/client';\r\n+const router = express.Router();\r\n+const prisma = new PrismaClient();\r\n+\r\n+// GET locations for a franchise/club\r\n+router.get('/by-franchise/:clubId', async (req, res) => {\r\n+  const { clubId } = req.params;\r\n+\r\n+  try {\r\n+    const locations = await prisma.location.findMany({\r\n+      where: { clubId }\r\n+    });\r\n+    res.json(locations);\r\n+  } catch (error) {\r\n+    res.status(500).json({ error: 'Failed to fetch locations' });\r\n+  }\r\n+});\r\n+\r\n+export default router;\r\n"
                },
                {
                    "date": 1752489723903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,28 +5,18 @@\n const router = express.Router();\r\n const prisma = new PrismaClient();\r\n \r\n // GET locations for a franchise/club\r\n-router.get('/by-franchise/:clubId', async (req, res) => {\r\n-  const { clubId } = req.params;\r\n+router.get('/by-franchise/:franchiseId', async (req, res) => {\r\n+  const { franchiseId } = req.params;\r\n \r\n   try {\r\n     const locations = await prisma.location.findMany({\r\n-      where: { clubId }\r\n+      where: { franchiseId }\r\n     });\r\n     res.json(locations);\r\n   } catch (error) {\r\n     res.status(500).json({ error: 'Failed to fetch locations' });\r\n   }\r\n });\r\n \r\n export default router;\r\n-//src/routes/location.routes.ts\r\n-import express from 'express';\r\n-import { getClassesByFranchise } from '../controllers/class.controller'; // ✅\r\n-\r\n-const router = express.Router();\r\n-\r\n-router.get('/by-franchise/:franchiseId', getClassesByFranchise); // ✅ still okay here\r\n\\ No newline at end of file\n-\r\n-\r\n-export default router;\n"
                }
            ],
            "date": 1752441694713,
            "name": "Commit-0",
            "content": "import express from 'express';\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\nconst router = express.Router();\r\nconst prisma = new PrismaClient();\r\n\r\nrouter.get('/', async (req, res) => {\r\n  const { clubId } = req.query;\r\n  if (!clubId) return res.status(400).json({ error: 'clubId required' });\r\n\r\n  try {\r\n    const locations = await prisma.location.findMany({\r\n      where: { clubId: String(clubId) },\r\n      orderBy: { name: 'asc' },\r\n    });\r\n    res.json(locations);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ error: 'Failed to fetch locations' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n"
        }
    ]
}