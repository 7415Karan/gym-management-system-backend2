{
    "sourceFile": "src/routes/class.routes.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752489933202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752490233005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,8 @@\n-// src/routes/class.routes.ts\r\n+import express from 'express';\r\n+import { getClassesByFranchise } from '../controllers/class.controller';\r\n \r\n-import express from 'express';\r\n-import { PrismaClient } from '@prisma/client';\r\n const router = express.Router();\r\n-const prisma = new PrismaClient();\r\n \r\n-// GET locations for a franchise/club\r\n-router.get('/by-franchise/:franchiseId', async (req, res) => {\r\n-  const { franchiseId } = req.params;\r\n+router.get('/by-franchise/:franchiseId', getClassesByFranchise);\r\n \r\n-  try {\r\n-    const locations = await prisma.location.findMany({\r\n-      where: { franchiseId }\r\n-    });\r\n-    res.json(locations);\r\n-  } catch (error) {\r\n-    res.status(500).json({ error: 'Failed to fetch locations' });\r\n-  }\r\n-});\r\n-\r\n export default router;\r\n"
                }
            ],
            "date": 1752489933202,
            "name": "Commit-0",
            "content": "// src/routes/class.routes.ts\r\n\r\nimport express from 'express';\r\nimport { PrismaClient } from '@prisma/client';\r\nconst router = express.Router();\r\nconst prisma = new PrismaClient();\r\n\r\n// GET locations for a franchise/club\r\nrouter.get('/by-franchise/:franchiseId', async (req, res) => {\r\n  const { franchiseId } = req.params;\r\n\r\n  try {\r\n    const locations = await prisma.location.findMany({\r\n      where: { franchiseId }\r\n    });\r\n    res.json(locations);\r\n  } catch (error) {\r\n    res.status(500).json({ error: 'Failed to fetch locations' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n"
        }
    ]
}