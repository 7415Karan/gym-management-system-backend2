{
    "sourceFile": "src/controllers/member.controller.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1752208689032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752213496534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,12 @@\n   try {\r\n     const member = await createNewMember(req.body);\r\n     res.status(201).json(member);\r\n   } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ error: 'Failed to create member' });\r\n+  console.error('[CREATE_MEMBER_ERROR]', err);\r\n+  if (err.code === 'P2002') {\r\n+    return res.status(400).json({ error: 'Email already exists' });\r\n   }\r\n+\r\n+  res.status(500).json({ error: 'Failed to create member' });\r\n+}\r\n };\r\n"
                },
                {
                    "date": 1752213526093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,16 @@\n+import { Request, Response } from 'express';\r\n+import { createNewMember } from '../services/member.service';\r\n+\r\n+export const createMember = async (req: Request, res: Response) => {\r\n+  try {\r\n+    const member = await createNewMember(req.body);\r\n+    res.status(201).json(member);\r\n+  } catch (err) {\r\n+  console.error('[CREATE_MEMBER_ERROR]', err);\r\n+  if (err.code === 'P2002') {\r\n+    return res.status(400).json({ error: 'Email already exists' });\r\n+  }\r\n+\r\n+  res.status(500).json({ error: 'Failed to create member' });\r\n+}\r\n+};\r\n"
                },
                {
                    "date": 1752215409328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+import { Request, Response } from 'express';\r\n+import { createNewMember } from '../services/member.service';\r\n+\r\n+export const createMember = async (req: Request, res: Response) => {\r\n+  try {\r\n+    const member = await createNewMember(req.body);\r\n+    res.status(201).json(member);\r\n+  } catch (err) {\r\n+  console.error('[CREATE_MEMBER_ERROR]', err);\r\n+  if (err.code === 'P2002') {\r\n+    return res.status(400).json({ error: 'Email already exists' });\r\n+  }\r\n+\r\n+  res.status(500).json({ error: 'Failed to create member' });\r\n+}\r\n+};\r\n+export const getMembers = async (req: Request, res: Response) => {\r\n+  const { page = 1, limit = 10, tab = 'all', search = '' } = req.query;\r\n+\r\n+  const skip = (Number(page) - 1) * Number(limit);\r\n+\r\n+  const filters: any = {\r\n+    OR: [\r\n+      { firstName: { contains: String(search), mode: 'insensitive' } },\r\n+      { lastName: { contains: String(search), mode: 'insensitive' } },\r\n+      { email: { contains: String(search), mode: 'insensitive' } },\r\n+    ],\r\n+  };\r\n+\r\n+  if (tab === 'active') filters.memberType = 'member';\r\n+  if (tab === 'prospect') filters.memberType = 'prospect';\r\n+  // Add others like `expired`, `recent` etc., later.\r\n+\r\n+  try {\r\n+    const members = await prisma.member.findMany({\r\n+      where: filters,\r\n+      skip,\r\n+      take: Number(limit),\r\n+      orderBy: { createdAt: 'desc' }\r\n+    });\r\n+\r\n+    const total = await prisma.member.count({ where: filters });\r\n+\r\n+    res.json({\r\n+      members,\r\n+      hasMore: skip + members.length < total\r\n+    });\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ error: 'Failed to fetch members' });\r\n+  }\r\n+};\r\n+\r\n"
                },
                {
                    "date": 1752215505670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+import { Request, Response } from 'express';\r\n+import { createNewMember } from '../services/member.service';\r\n+import prisma from '../lib/prisma';\r\n+\r\n+export const createMember = async (req: Request, res: Response) => {\r\n+  try {\r\n+    const member = await createNewMember(req.body);\r\n+    res.status(201).json(member);\r\n+  } catch (err) {\r\n+  console.error('[CREATE_MEMBER_ERROR]', err);\r\n+  if (err.code === 'P2002') {\r\n+    return res.status(400).json({ error: 'Email already exists' });\r\n+  }\r\n+\r\n+  res.status(500).json({ error: 'Failed to create member' });\r\n+}\r\n+};\r\n+export const getMembers = async (req: Request, res: Response) => {\r\n+  const { page = 1, limit = 10, tab = 'all', search = '' } = req.query;\r\n+\r\n+  const skip = (Number(page) - 1) * Number(limit);\r\n+\r\n+  const filters: any = {\r\n+    OR: [\r\n+      { firstName: { contains: String(search), mode: 'insensitive' } },\r\n+      { lastName: { contains: String(search), mode: 'insensitive' } },\r\n+      { email: { contains: String(search), mode: 'insensitive' } },\r\n+    ],\r\n+  };\r\n+\r\n+  if (tab === 'active') filters.memberType = 'member';\r\n+  if (tab === 'prospect') filters.memberType = 'prospect';\r\n+  // Add others like `expired`, `recent` etc., later.\r\n+\r\n+  try {\r\n+    const members = await prisma.member.findMany({\r\n+      where: filters,\r\n+      skip,\r\n+      take: Number(limit),\r\n+      orderBy: { createdAt: 'desc' }\r\n+    });\r\n+\r\n+    const total = await prisma.member.count({ where: filters });\r\n+\r\n+    res.json({\r\n+      members,\r\n+      hasMore: skip + members.length < total\r\n+    });\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ error: 'Failed to fetch members' });\r\n+  }\r\n+};\r\n+\r\n"
                },
                {
                    "date": 1752215741333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,12 @@\n   res.status(500).json({ error: 'Failed to create member' });\r\n }\r\n };\r\n export const getMembers = async (req: Request, res: Response) => {\r\n+\r\n+    console.log('[GET_MEMBERS] Controller hit'); \r\n+\r\n+\r\n   const { page = 1, limit = 10, tab = 'all', search = '' } = req.query;\r\n \r\n   const skip = (Number(page) - 1) * Number(limit);\r\n \r\n"
                }
            ],
            "date": 1752208689032,
            "name": "Commit-0",
            "content": "import { Request, Response } from 'express';\r\nimport { createNewMember } from '../services/member.service';\r\n\r\nexport const createMember = async (req: Request, res: Response) => {\r\n  try {\r\n    const member = await createNewMember(req.body);\r\n    res.status(201).json(member);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ error: 'Failed to create member' });\r\n  }\r\n};\r\n"
        }
    ]
}